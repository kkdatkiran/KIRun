{"version":3,"sources":["../../src/schemas/index.js"],"names":["schemas","INTEGER","type","SchemaType","notDeletable","LONG","FLOAT","DOUBLE","OBJECT","STRING","BOOLEAN","NULL","ARRAY","NUMERIC","add","name","schema","find","schemaRepository"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEC,sBAAWF,OADV;AAEPG,IAAAA,YAAY,EAAE;AAFP,GADK;AAKdC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAEC,sBAAWE,IADb;AAEJD,IAAAA,YAAY,EAAE;AAFV,GALQ;AASdE,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAEC,sBAAWG,KADZ;AAELF,IAAAA,YAAY,EAAE;AAFT,GATO;AAadG,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAEC,sBAAWI,MADX;AAENH,IAAAA,YAAY,EAAE;AAFR,GAbM;AAiBdI,EAAAA,MAAM,EAAE;AACNN,IAAAA,IAAI,EAAEC,sBAAWK,MADX;AAENJ,IAAAA,YAAY,EAAE;AAFR,GAjBM;AAqBdK,EAAAA,MAAM,EAAE;AACNP,IAAAA,IAAI,EAAEC,sBAAWM,MADX;AAENL,IAAAA,YAAY,EAAE;AAFR,GArBM;AAyBdM,EAAAA,OAAO,EAAE;AACPR,IAAAA,IAAI,EAAEC,sBAAWO,OADV;AAEPN,IAAAA,YAAY,EAAE;AAFP,GAzBK;AA6BdO,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAEC,sBAAWQ,IADb;AAEJP,IAAAA,YAAY,EAAE;AAFV,GA7BQ;AAiCdQ,EAAAA,KAAK,EAAE;AACLV,IAAAA,IAAI,EAAEC,sBAAWS,KADZ;AAELR,IAAAA,YAAY,EAAE;AAFT,GAjCO;AAqCdS,EAAAA,OAAO,EAAE;AACPX,IAAAA,IAAI,EAAE,CAACC,sBAAWF,OAAZ,EAAqBE,sBAAWE,IAAhC,EAAsCF,sBAAWI,MAAjD,EAAyDJ,sBAAWG,KAApE,CADC;AAEPF,IAAAA,YAAY,EAAE;AAFP;AArCK,CAAhB;;AA2CA,SAASU,GAAT,CAAaC,IAAb,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,uBAAIhB,OAAO,CAACe,IAAD,CAAX,0CAAI,cAAeX,YAAnB,EAAiC;AAC/B,qBAAUW,IAAV;AACD;;AACDf,EAAAA,OAAO,CAACe,IAAD,CAAP,GAAgBC,MAAhB;AACA,SAAOA,MAAP;AACD;;AAED,SAASC,IAAT,CAAcF,IAAd,EAAoB;AAClB,SAAOf,OAAO,CAACe,IAAD,CAAd;AACD;;AAED,IAAMG,gBAAgB,GAAG;AACvBlB,EAAAA,OAAO,EAAPA,OADuB;AAEvBc,EAAAA,GAAG,EAAHA,GAFuB;AAGvBG,EAAAA,IAAI,EAAJA;AAHuB,CAAzB;eAMeC,gB","sourcesContent":["import { SchemaType } from \"./constants\";\n\nconst schemas = {\n  INTEGER: {\n    type: SchemaType.INTEGER,\n    notDeletable: true,\n  },\n  LONG: {\n    type: SchemaType.LONG,\n    notDeletable: true,\n  },\n  FLOAT: {\n    type: SchemaType.FLOAT,\n    notDeletable: true,\n  },\n  DOUBLE: {\n    type: SchemaType.DOUBLE,\n    notDeletable: true,\n  },\n  OBJECT: {\n    type: SchemaType.OBJECT,\n    notDeletable: true,\n  },\n  STRING: {\n    type: SchemaType.STRING,\n    notDeletable: true,\n  },\n  BOOLEAN: {\n    type: SchemaType.BOOLEAN,\n    notDeletable: true,\n  },\n  NULL: {\n    type: SchemaType.NULL,\n    notDeletable: true,\n  },\n  ARRAY: {\n    type: SchemaType.ARRAY,\n    notDeletable: true,\n  },\n  NUMERIC: {\n    type: [SchemaType.INTEGER, SchemaType.LONG, SchemaType.DOUBLE, SchemaType.FLOAT],\n    notDeletable: true,\n  },\n};\n\nfunction add(name, schema) {\n  if (schemas[name]?.notDeletable) {\n    throw `'${name}' already exists and cannot be replaced.`;\n  }\n  schemas[name] = schema;\n  return schema;\n}\n\nfunction find(name) {\n  return schemas[name];\n}\n\nconst schemaRepository = {\n  schemas,\n  add,\n  find,\n};\n\nexport default schemaRepository;\n"],"file":"index.js"}