{"version":3,"sources":["../../src/V001/index.js"],"names":["GENERAL","addMessage","msgs","key","message","push","startStepCheck","steps","repository","start","filter","e","type","length","forEach","properties","parameters","param","findSchema","schema","name","compile","code","functions","functionRepository","schemaRepository","definition","undefined","Object","entries","debug","execute","module","exports","statements"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,SAAhB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,OAA/B,EAAwC;AACtC,MAAI,CAACF,IAAI,CAACC,GAAD,CAAT,EAAgBD,IAAI,CAACC,GAAD,CAAJ,GAAY,EAAZ;AAChBD,EAAAA,IAAI,CAACC,GAAD,CAAJ,CAAUE,IAAV,CAAeD,OAAf;AACD;;AAED,SAASE,cAAT,CAAwBC,KAAxB,EAA+BL,IAA/B,EAAqCM,UAArC,EAAiD;AAAA;;AAC/C,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa;AAAA;AAAA,QAAIC,CAAJ;;AAAA,WAAWA,CAAC,CAACC,IAAF,KAAW,OAAtB;AAAA,GAAb,CAAd;;AACA,MAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACtBZ,IAAAA,UAAU,CAACC,IAAD,EAAOF,OAAP,EAAgB,oBAAhB,CAAV;AACA;AACD,GAHD,MAGO,IAAIS,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AAC3BJ,IAAAA,KAAK,CAACK,OAAN,CAAc;AAAA;AAAA,UAAEH,CAAF;;AAAA,aAASV,UAAU,CAACC,IAAD,EAAOS,CAAP,EAAU,6CAAV,CAAnB;AAAA,KAAd;AACA;AACD;;AACD,MAAI,yBAACF,KAAK,CAAC,CAAD,CAAL,CAASM,UAAV,yEAAC,oBAAqBC,UAAtB,kDAAC,sBAAiCH,MAAlC,CAAJ,EAA8C;;AATC,6CAW7BJ,KAAK,CAAC,CAAD,CAAL,CAASM,UAAT,CAAoBC,UAXS;AAAA;;AAAA;AAW/C;AAAA,UAASC,KAAT;;AACE,UAAI,CAACT,UAAU,CAACU,UAAX,CAAsBD,KAAK,CAACE,MAA5B,CAAL,EAA0C;AACxClB,QAAAA,UAAU,CAACC,IAAD,EAAOO,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAP,2BAAsCQ,KAAK,CAACE,MAA5C,yCAAiFF,KAAK,CAACG,IAAvF,OAAV;AACD;AAHH;AAX+C;AAAA;AAAA;AAAA;AAAA;AAehD;;AAED,SAASC,OAAT,QAA0F;AAAA;;AAAA,MAAvEC,IAAuE,SAAvEA,IAAuE;AAAA,8BAAjEC,SAAiE;AAAA,MAAjEA,SAAiE,gCAArDC,qBAAqD;AAAA,+BAAjChB,UAAiC;AAAA,MAAjCA,UAAiC,iCAApBiB,mBAAoB;AACxF,MAAI,EAACH,IAAD,aAACA,IAAD,mCAACA,IAAI,CAAEI,UAAP,6CAAC,iBAAkBnB,KAAnB,CAAJ,EAA8B,OAAOoB,SAAP;AAE9B,MAAIpB,KAAK,GAAGqB,MAAM,CAACC,OAAP,CAAeP,IAAI,CAACI,UAAL,CAAgBnB,KAA/B,CAAZ;AACA,MAAML,IAAI,GAAG,EAAb;AACAI,EAAAA,cAAc,CAACC,KAAD,EAAQL,IAAR,EAAcM,UAAd,CAAd;AAEA,SAAON,IAAP;AACD;;AAED,SAAS4B,KAAT,GAAiB,CAAE;;AACnB,SAASC,OAAT,GAAmB,CAAE;;AAErBC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,UAAU,EAAVA,sBADe;AAEfb,EAAAA,OAAO,EAAPA,OAFe;AAGfS,EAAAA,KAAK,EAALA,KAHe;AAIfC,EAAAA,OAAO,EAAPA;AAJe,CAAjB","sourcesContent":["import schemaRepository from \"../schemas\";\nimport functionRepository from \"../functions\";\nimport statements from \"./statements\";\n\nconst GENERAL = \"general\";\n\nfunction addMessage(msgs, key, message) {\n  if (!msgs[key]) msgs[key] = [];\n  msgs[key].push(message);\n}\n\nfunction startStepCheck(steps, msgs, repository) {\n  const start = steps.filter(([, e]) => e.type === \"START\");\n  if (start.length === 0) {\n    addMessage(msgs, GENERAL, \"No start is found.\");\n    return;\n  } else if (start.length > 1) {\n    start.forEach(([e]) => addMessage(msgs, e, \"Multiple starts found, only one is allowed.\"));\n    return;\n  }\n  if (!start[0].properties?.parameters?.length) return;\n\n  for (let param of start[0].properties.parameters)\n    if (!repository.findSchema(param.schema)) {\n      addMessage(msgs, start[0][0], `Unkown schema '${param.schema}' is used for the parameter ${param.name}.`);\n    }\n}\n\nfunction compile({ code, functions = functionRepository, repository = schemaRepository }) {\n  if (!code?.definition?.steps) return undefined;\n\n  let steps = Object.entries(code.definition.steps);\n  const msgs = {};\n  startStepCheck(steps, msgs, repository);\n\n  return msgs;\n}\n\nfunction debug() {}\nfunction execute() {}\n\nmodule.exports = {\n  statements,\n  compile,\n  debug,\n  execute,\n};\n"],"file":"index.js"}